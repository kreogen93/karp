# В этих заданиях мы будем подготавливать почву для сервиса рекомендаций финального проекта.
# Оберните в ORM таблицу post из базы данных для финального проекта. У вас должен получиться класс,
# который использует declarative_base() (заготовка будет ниже) и объявляет все колонки. Этим классом
# будем пользоваться, чтобы потом доставать объекты. Учтите, что при создании класса необходимо правильно
# указать имя таблицы (это __tablename__) и схему таблицы (для финального проекта используется стандартная public,
# поэтому не обязательно явно задавать).
# Отправьте файл под названием table_post.py, содержащий реализацию класса Post, который описывает
# таблицу post на языке ORM. Обратите внимание, что table_post.py должен импортировать Base из файла database, вот так:
# Файл database.py (скопируйте в ту же папку, где лежат остальные исходники вашего проекта):
from sqlalchemy import Column, Integer, String, Text, desc, select
# импортируем Base так, как описано в задании
from database import Base, SessionLocal


class Post(Base):
    # указываем явно имя таблицы, иначе SQLAlchemy не поймет и выдаст ошибку
    __tablename__ = "post"
    id = Column(Integer, primary_key=True)  # используем тип Integer из SQLAlchemy, не из Python!
    text = Column(Text)
    # nullable разрешает пропускать значение в колонке
    topic = Column(String, nullable=True)

    # __repr__ даст возможность печатать объект (об этом говорили в лекции по классам)
    def __repr__(self):
        return f"{self.id} - {self.topic}"


